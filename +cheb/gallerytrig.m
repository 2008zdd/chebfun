function [f,fa] = gallerytrig(name)
%GALLERYTRIG   Chebfun periodic example functions.
%   GALLERYTRIG(NAME) returns a periodic chebfun corresponding to NAME. See
%   the listing below for available function names.
%
%   For example,  plot(cheb.gallerytrig('gibbs'))  plots the first 20 terms of
%   the Gibbs-Wilbraham approximation of a square wave. For details of how
%   each function is constructed, try  type +cheb/gallerytrig  or
%   edit cheb.gallerytrig.
%
%   [F,FA] = GALLERYTRIG(NAME) also returns the anonymous function FA used to
%   define the function. Some gallery functions are generated by operations
%   beyond the usual Chebfun constructor (e.g. by solving ODEs), so FA in
%   those cases simply evaluates the chebfun.
%
%   GALLERYTRIG() with no input argument returns a random function from the
%   gallery.
%
%   AMsignal     Signal with modulated amplitude
%   FMsignal     Signal with modulated frequency
%   gibbs        Gibbs-Wilbraham approximation of a square wave
%   gibbsinterp  Interpolant of a square wave
%   tsunami      Solution to periodic ODE
%   weierstrass  First 8 terms of Weierstrass fractal
%
%   Gallery functions are subject to change in future releases of Chebfun.
%
% See also CHEB.GALLERY, CHEB.GALLERY2.

% Copyright 2014 by The University of Oxford and The Chebfun Developers.
% See http://www.chebfun.org/ for Chebfun information.


% If the user did not supply an input, return a random function
% from the gallery.
if ( nargin == 0 )
    names = {'amsignal', 'fmsignal', 'gibbs', 'gibbsinterp', ...
        'tsunami', 'weierstrass'};
    name = names{randi(length(names))};
end

% The main switch statement.
switch lower(name)

    % Signal with modulated amplitude
    case 'amsignal'
        fa = @(x) cos(50*x).*(1+.2*cos(5*x));
        f = chebfun(fa, [-pi pi], 'trig');

    % Signal with modulated frequency
    case 'fmsignal'
        fa = @(x) cos(50*x+4*sin(5*x));
        f = chebfun(fa, [-pi pi], 'trig');

    % Function from SIAM 100-digit challenge
    case 'gibbs'
        n = 20;
        N = (1:2:n)';
        fa = @(x) sum(4/pi * sin(bsxfun(@times,N,x(:)')) ...
                            ./ (N*ones(1,length(x))) )';
        f = chebfun(fa, [-pi pi], 'trig');

    % Interpolant of a square wave
    case 'gibbsinterp'
        n = 20;
        fa = @(x) 2*(x > 0) - 1;
        f = chebfun(fa, [-pi pi], 'trig', 2*n+1);

    % Solution to periodic ODE
    case 'tsunami'
        op = @(x,u) diff(u,2) + diff(u) + 600*(1+sin(x)).*u;
        L = chebop(op, [-pi,pi], 'periodic');
        f = L\1;
        fa = @(x) f(x);

    % The first eight terms of the pathological function
    case 'weierstrass'
        k = 8;
        K = (1:k)';
        fa = @(x) sum( 2.^-(K*ones(1,length(x))) ...
                    .* cos(bsxfun(@times, 4.^K, x(:)')) )';
        f = chebfun(fa, [-pi/4 pi/4], 'trig');

    % Error if the input is unknown.
    otherwise
        error('CHEB:GALLERYTRIG:unknown:unknownFunction', ...
            'Unknown function.')

end

end
